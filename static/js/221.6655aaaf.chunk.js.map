{"version":3,"file":"static/js/221.6655aaaf.chunk.js","mappings":"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","sources":["features/profile/profile-selectors.ts","features/profile/myPosts/MyPosts.tsx","features/profile/drop down btn/SetThemeBtn.tsx","features/profile/editable status/EditableStatus.tsx","features/profile/modal window/SetDataModalBtn.tsx","features/profile/modal window/SetUserInfoModalBtn.tsx","common/assets/contactsIcons/FacebookOutlined.tsx","common/assets/contactsIcons/VkOutlined.tsx","common/assets/contactsIcons/MainlinkOutlined.tsx","common/assets/contactsIcons/WebsiteOutlined.tsx","features/profile/ProfileInfo.tsx","features/profile/Profile.tsx"],"sourcesContent":["import {RootState} from \"app/store\";\r\n\r\n\r\nexport const selectProfileInfo = (state: RootState) => state.profile.profileInfo\r\nexport const selectFullName = (state: RootState) => state.profile.profileInfo?.fullName\r\nexport const selectContacts = (state: RootState) => state.profile.profileInfo?.contacts\r\nexport const selectPhotos = (state: RootState) => state.profile.profileInfo?.photos\r\nexport const selectAboutMe = (state: RootState) => state.profile.profileInfo?.aboutMe\r\nexport const selectLookingForAJob = (state: RootState) => state.profile.profileInfo?.lookingForAJob\r\nexport const selectLookingForAJobDescription = (state: RootState) => state.profile.profileInfo?.lookingForAJobDescription\r\n\r\nexport const selectStatus = (state: RootState) => state.profile.status\r\nexport const selectPosts = (state: RootState) => state.profile.posts\r\nexport const selectNewPost= (state: RootState) => state.profile.newPostText\r\n\r\n","import React, {memo} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {postType} from \"features/profile/profile-reducer\";\r\nimport {DeleteOutlined, EditOutlined, LikeOutlined} from \"@ant-design/icons\";\r\nimport {useAppSelector} from \"common/hooks/selectors\";\r\nimport {selectPosts} from \"features/profile/profile-selectors\";\r\n\r\n\r\ntype MyPostPropsType = {\r\n    fullName: string\r\n    photo: string\r\n}\r\n\r\ntype PostPropsType = {\r\n    title: string\r\n    name: string | null\r\n    avatar: string | null\r\n}\r\n\r\nexport const MyPosts = memo((props: MyPostPropsType) => {\r\n\r\n    console.log('MyPosts is render')\r\n\r\n    const posts = useAppSelector(selectPosts)\r\n\r\n    const postList = posts.map((el: postType) => <Post key={el.id}\r\n                                                       title={el.data}\r\n                                                       name={props.fullName}\r\n                                                       avatar={props.photo}\r\n    />)\r\n\r\n    return (\r\n        <Posts>\r\n            {postList}\r\n        </Posts>\r\n    );\r\n});\r\n\r\nconst Post = memo((props: PostPropsType) => {\r\n\r\n        console.log('Post is render')\r\n\r\n        return (\r\n            <PostStyled>\r\n                <PostWrappper>\r\n                    <AvatarAndTimeWrapper>\r\n                        <PostAvatar avatar={props.avatar!}>\r\n\r\n                        </PostAvatar>\r\n                        <TimePost>\r\n                            12.07.23\r\n                        </TimePost>\r\n                    </AvatarAndTimeWrapper>\r\n                    <TextWrapper>\r\n                        <UserName>\r\n                            {props.name}\r\n                        </UserName>\r\n                        <PostTitle>\r\n                            {props.title}\r\n                        </PostTitle>\r\n                    </TextWrapper>\r\n                </PostWrappper>\r\n\r\n                <IconsWrapper>\r\n                    <Icons><DeleteOutlined rev={''}/></Icons>\r\n                    <Icons><EditOutlined rev={''}/></Icons>\r\n                    <Icons><LikeOutlined rev={''}/></Icons>\r\n                </IconsWrapper>\r\n            </PostStyled>\r\n        )\r\n    }\r\n)\r\n\r\n//=========================MYPOSTS=================================\r\n\r\nconst Posts = styled.div`\r\n  display: flex;\r\n  flex-flow: wrap;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #1a1a21;\r\n  border-radius: 20px;\r\n`\r\n\r\n//=========================POST====================================\r\n\r\nconst PostStyled = styled.div`\r\n  width: 100%;\r\n  min-height: 150px;\r\n  background-color: #1a1a21;\r\n  box-shadow: 0 0 7px rgba(24, 24, 24, 0.26);\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  overflow-wrap: anywhere;\r\n  border-bottom: 1px solid rgba(17, 17, 17, 0.89);\r\n`\r\n\r\nconst PostWrappper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  position: relative;\r\n  bottom: 10px;\r\n`\r\n\r\nconst AvatarAndTimeWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TimePost = styled.div`\r\n  color: rgba(255, 255, 255, 0.49);\r\n  font-size: 10px;\r\n  margin-top: 4px;\r\n`\r\n\r\nconst PostAvatar = styled.div<{ avatar: string }>`\r\n  background-image: url(${props => props.avatar ? props.avatar : ''});\r\n  background-color: ${props => !props.avatar ? 'gray' : ''};\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 100%;\r\n  margin-inline: 10px;\r\n  flex-shrink: 0;\r\n`\r\n\r\nconst PostTitle = styled.div`\r\n  color: white;\r\n  margin-inline: 10px;\r\n  font-size: 12px;\r\n`\r\nconst UserName = styled.div`\r\n  margin-inline: 10px;\r\n  color: white;\r\n`\r\n\r\nconst IconsWrapper = styled.div`\r\n  position: relative;\r\n  top: 50px;\r\n  display: flex;\r\n  gap: 5px;\r\n  margin-right: 10px;\r\n`\r\nconst Icons = styled.div`\r\n  color: rgba(255, 255, 255, 0.49);\r\n`\r\n//=========================/////===================================","import React from 'react';\r\nimport {Button, Dropdown} from \"antd\";\r\nimport type { MenuProps } from 'antd';\r\nimport styled from \"styled-components\";\r\nimport {EditOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nconst items: MenuProps['items'] = [\r\n    {\r\n        key: '1',\r\n        label: (\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\r\n                1st menu item\r\n            </a>\r\n        ),\r\n    },\r\n    {\r\n        key: '3',\r\n        danger: true,\r\n        label: (\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\r\n                3rd menu item\r\n            </a>\r\n        ),\r\n    },\r\n];\r\n\r\nexport const SetThemeBtn = () => {\r\n    return (\r\n        <>\r\n            <DropDownStyled menu={{ items }} placement=\"bottomRight\" arrow>\r\n                <Button><EditOutlined rev={''} color={'white'}/></Button>\r\n            </DropDownStyled>\r\n        </>\r\n    );\r\n};\r\n\r\nconst DropDownStyled = styled(Dropdown)`\r\n      background-color: rgba(40, 44, 52, 0.66);\r\n      border: none;\r\n      color: white;\r\n      border-radius: 5px 15px 0 5px;\r\n`\r\n\r\n","import React, {useState} from 'react';\r\nimport styled from \"styled-components\";\r\n\r\ntype PropsType = {\r\n    status: string | null\r\n}\r\n\r\nexport const EditableStatus = (props: PropsType) => {\r\n    const [mode, setMode] = useState(false)\r\n\r\n    const ModeHandler = () => {\r\n        setMode(!mode)\r\n    }\r\n\r\n    return (\r\n        <div onDoubleClick={ModeHandler}>\r\n            {!props.status ? 'Status is absent' : props.status}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst StyledInput = styled.input`\r\n\r\n`\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport styled, {StyleSheetManager} from \"styled-components\";\r\nimport {Button, Input, Modal} from \"antd\";\r\nimport {EditOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nexport const SetDataModalBtn = () => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const dispatch = useDispatch()\r\n\r\n    const showModal = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleTextChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n    };\r\n\r\n    const onCancel = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleUpload = () => {\r\n        onCancel();\r\n    };\r\n\r\n    return (\r\n        <StyleSheetManager shouldForwardProp={(prop) => prop !== 'text'}>\r\n            <UploadModalWrapper>\r\n                <StyledButtonOpen type=\"primary\" onClick={showModal}>\r\n                    <EditOutlined rev={''} color={'white'}/> status\r\n                </StyledButtonOpen>\r\n                <StyledModal\r\n                    open={open}\r\n                    title=\"Загрузка URL картинки\"\r\n                    onCancel={onCancel}\r\n                    footer={[\r\n                        <Button key=\"cancel\" onClick={onCancel}>\r\n                            Отмена\r\n                        </Button>,\r\n                        <StyledButtonUpload key=\"upload\" type=\"primary\" onClick={handleUpload}>\r\n                            Загрузить\r\n                        </StyledButtonUpload>,\r\n                    ]}\r\n                >\r\n                    <StyledInput type='file' onChange={handleTextChange}></StyledInput>\r\n                </StyledModal>\r\n            </UploadModalWrapper>\r\n        </StyleSheetManager>\r\n    );\r\n};\r\n\r\nconst UploadModalWrapper = styled.div`\r\n  display: block;\r\n  //position: absolute;\r\n\r\n`\r\nconst StyledModal = styled(Modal)`\r\n  .ant-modal-content {\r\n    background-color: #1a1a21;\r\n\r\n  }\r\n\r\n  .ant-modal-title {\r\n    color: white;\r\n  }\r\n\r\n  .ant-modal-header {\r\n    background-color: #1a1a21;\r\n    color: white;\r\n  }\r\n`\r\nconst StyledButtonOpen = styled(Button)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #3D50FA;\r\n  height: 24px;\r\n\r\n  .ant-btn-primary:hover {\r\n    background: black;\r\n    border-color: black;\r\n  }\r\n`\r\n\r\nconst StyledButtonUpload = styled(Button)`\r\n\r\n  transition: background-color 0.2s ease, color 0.2s ease, box-shadow 0.2s ease;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n\r\n  background-color: #282c34;\r\n  color: white;\r\n  resize: none;\r\n  outline: none;\r\n  border: none;\r\n\r\n  &::placeholder {\r\n    color: rgba(127, 127, 145, 0.47);\r\n  }\r\n\r\n`","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport styled, {StyleSheetManager} from \"styled-components\";\r\nimport {Button, Input, Modal} from \"antd\";\r\nimport {EditOutlined} from \"@ant-design/icons\";\r\n\r\nexport const SetUserInfoModalBtn = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const dispatch = useDispatch()\r\n\r\n    const showModal = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleTextChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n    };\r\n\r\n    const onCancel = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleUpload = () => {\r\n        onCancel();\r\n    };\r\n\r\n    return (\r\n        <StyleSheetManager shouldForwardProp={(prop) => prop !== 'text'}>\r\n            <UploadModalWrapper>\r\n                <StyledButtonOpen type=\"primary\" onClick={showModal}>\r\n                    <EditOutlined rev={''} color={'white'}/> profile\r\n                </StyledButtonOpen>\r\n                <StyledModal\r\n                    open={open}\r\n                    title=\"Загрузка URL картинки\"\r\n                    onCancel={onCancel}\r\n                    footer={[\r\n                        <Button key=\"cancel\" onClick={onCancel}>\r\n                            Отмена\r\n                        </Button>,\r\n                        <StyledButtonUpload key=\"upload\" type=\"primary\" onClick={handleUpload}>\r\n                            Загрузить\r\n                        </StyledButtonUpload>,\r\n                    ]}\r\n                >\r\n                    <StyledInput type='file' onChange={handleTextChange}></StyledInput>\r\n                </StyledModal>\r\n            </UploadModalWrapper>\r\n        </StyleSheetManager>\r\n    );\r\n};\r\n\r\nconst UploadModalWrapper = styled.div`\r\n  display: block;\r\n  //position: absolute;\r\n\r\n`\r\nconst StyledModal = styled(Modal)`\r\n  .ant-modal-content {\r\n    background-color: #1a1a21;\r\n\r\n  }\r\n\r\n  .ant-modal-title {\r\n    color: white;\r\n  }\r\n\r\n  .ant-modal-header {\r\n    background-color: #1a1a21;\r\n    color: white;\r\n  }\r\n`\r\nconst StyledButtonOpen = styled(Button)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #39404b;\r\n  height: 24px;\r\n\r\n  .ant-btn-primary:hover {\r\n    background: black;\r\n    border-color: black;\r\n  }\r\n`\r\n\r\nconst StyledButtonUpload = styled(Button)`\r\n\r\n  transition: background-color 0.2s ease, color 0.2s ease, box-shadow 0.2s ease;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n\r\n  background-color: #282c34;\r\n  color: white;\r\n  resize: none;\r\n  outline: none;\r\n  border: none;\r\n\r\n  &::placeholder {\r\n    color: rgba(127, 127, 145, 0.47);\r\n  }\r\n\r\n`","import React from 'react';\r\nimport iconFB from '../contactsIcons/fb.png'\r\nimport styled from \"styled-components\";\r\n\r\nexport const FacebookOutlined = () => {\r\n    return (\r\n        <IconWrapper src={iconFB}/>\r\n    );\r\n};\r\n\r\nconst IconWrapper = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n  background-position: center;\r\n  border-radius: 100%;\r\n`","import React from 'react';\r\nimport iconVK from '../contactsIcons/vk.png'\r\nimport styled from \"styled-components\";\r\n\r\nexport const VkOutlined = () => {\r\n    return (\r\n        <IconWrapper src={iconVK}/>\r\n    );\r\n};\r\n\r\nconst IconWrapper = styled.img`\r\n  width: 31px;\r\n  height: 31px;\r\n  background-position: center;\r\n  border-radius: 100%;\r\n`","import React from 'react';\r\nimport iconVK from '../contactsIcons/vk.png'\r\nimport styled from \"styled-components\";\r\n\r\nexport const MainlinkOutlined = () => {\r\n    return (\r\n        <IconWrapper src={iconVK}/>\r\n    );\r\n};\r\n\r\nconst IconWrapper = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n  background-position: center;\r\n  border-radius: 100%;\r\n`","import React from 'react';\r\nimport iconVK from '../contactsIcons/vk.png'\r\nimport styled from \"styled-components\";\r\n\r\nexport const WebsiteOutlined = () => {\r\n    return (\r\n        <IconWrapper src={iconVK}/>\r\n    );\r\n};\r\n\r\nconst IconWrapper = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n  background-position: center;\r\n  border-radius: 100%;\r\n`","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {GithubOutlined, InstagramOutlined, TwitterOutlined, YoutubeOutlined} from \"@ant-design/icons\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {contactsType} from \"features/profile/profile-reducer\";\r\nimport {FacebookOutlined} from \"common/assets/contactsIcons/FacebookOutlined\";\r\nimport {VkOutlined} from \"common/assets/contactsIcons/VkOutlined\";\r\nimport {MainlinkOutlined} from \"common/assets/contactsIcons/MainlinkOutlined\";\r\nimport {WebsiteOutlined} from \"common/assets/contactsIcons/WebsiteOutlined\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Loader} from \"common/components/loader/Loader\";\r\nimport {RootState} from \"app/store\";\r\n\r\n\r\ntype propsType = {\r\n    aboutMe: string | null\r\n    lookingForAJob: boolean | null\r\n    lookingForAJobDescription: string | null\r\n    contacts: contactsType\r\n}\r\n\r\nexport const ProfileInfo = (props: propsType) => {\r\n\r\n    const {aboutMe, lookingForAJob, lookingForAJobDescription, contacts} = props\r\n\r\n    const profile = useSelector((state: RootState) => state.profile)\r\n\r\n    const icons = [\r\n        {\r\n            id: 1,\r\n            icon: <GithubOutlined rev={''} style={{fontSize: '31px', color: '#000000', backgroundPosition: 'center'}}/>,\r\n            link: contacts && contacts.github ? contacts.github : '#',\r\n            color: contacts ? 'white' : '#333'\r\n        },\r\n        {\r\n            id: 2,\r\n            icon: <YoutubeOutlined rev={''} style={{\r\n                fontSize: '20px',\r\n                color: contacts && contacts.youtube ? '#c90c0c' : '#333'\r\n            }}/>,\r\n            link: contacts && contacts.youtube ? contacts.youtube : '#',\r\n            color: 'black'\r\n        },\r\n        {\r\n            id: 3,\r\n            icon: <TwitterOutlined rev={''} style={{\r\n                fontSize: '20px',\r\n                color: contacts && contacts.twitter ? '#3F48CC' : '#333'\r\n            }}/>,\r\n            link: contacts && contacts.twitter ? contacts.twitter : '#',\r\n            color: 'black'\r\n        },\r\n        {\r\n            id: 4,\r\n            icon: <InstagramOutlined rev={''} style={{\r\n                fontSize: '20px',\r\n                color: contacts && contacts.instagram ? '#3F48CC' : '#333'\r\n            }}/>, link: contacts && contacts.instagram ? contacts.instagram : '#', color: 'black'\r\n        },\r\n        {\r\n            id: 5,\r\n            icon: <FacebookOutlined/>,\r\n            link: contacts && contacts.facebook ? contacts.facebook : '#',\r\n            color: contacts && contacts.facebook ? '#3F48CC' : '#333'\r\n        },\r\n        {\r\n            id: 6,\r\n            icon: <VkOutlined/>,\r\n            link: contacts && contacts.vk ? contacts.vk : '#',\r\n            color: contacts && contacts.vk ? '#437af1' : '#333'\r\n        },\r\n        {\r\n            id: 7,\r\n            icon: <MainlinkOutlined/>,\r\n            link: contacts && contacts.mainLink ? contacts.mainLink : '#',\r\n            color: contacts && contacts.mainLink ? '#437af1' : '#333'\r\n        },\r\n        {\r\n            id: 8,\r\n            icon: <WebsiteOutlined/>,\r\n            link: contacts && contacts.website ? contacts.website : '#',\r\n            color: contacts && contacts.website ? '#437af1' : '#333'\r\n        },\r\n    ]\r\n\r\n    const iconsList = icons.map(el =>\r\n        <NavLink key={el.id} to={el.link} target={\"_blank\"}>\r\n            <IconContacts color={el.color}>\r\n                {el.icon}\r\n            </IconContacts>\r\n        </NavLink>)\r\n\r\n    if (!profile.profileInfo) {\r\n        return <Loader/>;\r\n    }\r\n\r\n    return (\r\n        <ProfileInfoWrapper>\r\n            <AboutMeWrapper>\r\n                About Me:\r\n                <div>{aboutMe}</div>\r\n                <div>{lookingForAJob ? 'ищу!' : 'не ищу!'}</div>\r\n                <div>{lookingForAJobDescription}</div>\r\n            </AboutMeWrapper>\r\n            <ContactsWrapper>\r\n                <ContactsStyleDiv>\r\n                    Contacts:\r\n                </ContactsStyleDiv>\r\n                {iconsList}\r\n            </ContactsWrapper>\r\n        </ProfileInfoWrapper>\r\n    );\r\n};\r\n\r\nconst ProfileInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  max-width: 820px;\r\n  gap: 20px;\r\n`\r\n\r\nconst AboutMeWrapper = styled.div`\r\n  font-size: 14px;\r\n  flex-flow: wrap;\r\n  width: 400px;\r\n  border: 1px solid #464646;\r\n  border-radius: 15px;\r\n  padding: 10px 0 10px 0;\r\n  color: white;\r\n  display: flex;\r\n  padding-inline: 10px;\r\n  gap: 10px;\r\n  flex-direction: column;\r\n  background-color: #1a1a21;\r\n`\r\n\r\nconst ContactsWrapper = styled.div`\r\n  font-size: 14px;\r\n  flex-flow: wrap;\r\n  width: 400px;\r\n  border: 1px solid #464646;\r\n  border-radius: 15px;\r\n  color: white;\r\n  display: flex;\r\n  gap: 10px;\r\n  height: max-content;\r\n  align-items: center;\r\n  background-color: #1a1a21;\r\n`\r\nconst IconContacts = styled.div<{ color: string }>`\r\n  width: 29px;\r\n  height: 29px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${props => props.color};\r\n  border-radius: 100%;\r\n`\r\nconst ContactsStyleDiv = styled.div`\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  min-height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: 14px 0 0 14px;\r\n`\r\n","import React, {ChangeEvent, memo} from 'react';\r\nimport styled, {StyleSheetManager} from \"styled-components\";\r\nimport theme from 'common/assets/1681961897_kartinki-pibig-info-p-nasishchennaya-kartinka-arti-krasivo-1.jpg'\r\nimport avatar from 'common/assets/1676295972138872283.png'\r\nimport {MyPosts} from \"features/profile/myPosts/MyPosts\";\r\nimport {SetThemeBtn} from \"features/profile/drop down btn/SetThemeBtn\";\r\nimport {EditableStatus} from \"features/profile/editable status/EditableStatus\";\r\nimport {SetDataModalBtn} from \"features/profile/modal window/SetDataModalBtn\";\r\nimport {SetUserInfoModalBtn} from \"features/profile/modal window/SetUserInfoModalBtn\";\r\nimport {SendOutlined} from \"@ant-design/icons\";\r\nimport {ProfileInfo} from \"features/profile/ProfileInfo\";\r\nimport {useAppDispatch, useAppSelector} from \"common/hooks/selectors\";\r\nimport {\r\n    selectAboutMe,\r\n    selectContacts,\r\n    selectFullName,\r\n    selectLookingForAJob, selectLookingForAJobDescription, selectNewPost,\r\n    selectPhotos, selectStatus\r\n} from \"features/profile/profile-selectors\";\r\nimport {addPostAC,setNewPostTextAC} from \"features/profile/profile-reducer\";\r\n\r\n\r\ntype addBtnConditionProps = {\r\n    condition: string\r\n}\r\n\r\nexport const Profile = memo(() => {\r\n\r\n    console.log('profile is rendered ')\r\n\r\n    const fullName = useAppSelector(selectFullName)\r\n    const contacts = useAppSelector(selectContacts)\r\n    const photos = useAppSelector(selectPhotos)\r\n    const aboutMe = useAppSelector(selectAboutMe)\r\n    const lookingForAJob = useAppSelector(selectLookingForAJob)\r\n    const lookingForAJobDescription = useAppSelector(selectLookingForAJobDescription)\r\n    const status = useAppSelector(selectStatus)\r\n    const newPost = useAppSelector(selectNewPost)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setNewPostTextAC(e.currentTarget.value))\r\n    }\r\n\r\n    const addPost = () => {\r\n        dispatch(addPostAC())\r\n        dispatch(setNewPostTextAC(''))\r\n    }\r\n\r\n    return (\r\n        <StyleSheetManager shouldForwardProp={(prop) => prop !== 'condition'}>\r\n            <ProfileWrapper>\r\n                <ProfileInnerWrapper>\r\n                    <ProfileTheme>\r\n                        <SetThemeBtn/>\r\n                    </ProfileTheme>\r\n                    <ProfileNameStatusWrapper>\r\n                        <div>\r\n                            <ProfileName>\r\n                                {fullName}\r\n                            </ProfileName>\r\n                            <ProfileStatus>\r\n                                <EditableStatus status={status}/>\r\n                                <ModalBtnWrapper>\r\n                                    <SetDataModalBtn/>\r\n                                    <SetUserInfoModalBtn/>\r\n                                </ModalBtnWrapper>\r\n                            </ProfileStatus>\r\n                            <ProfileAvatar avatar={photos?.large!}/>\r\n                        </div>\r\n                    </ProfileNameStatusWrapper>\r\n                </ProfileInnerWrapper>\r\n                <ProfileInfo contacts={contacts!}\r\n                             aboutMe={aboutMe!}\r\n                             lookingForAJob={lookingForAJob!}\r\n                             lookingForAJobDescription={lookingForAJobDescription!}\r\n                />\r\n                <>\r\n                    <PostAddWrapper>\r\n                        <AddPostButton onClick={addPost}\r\n                                       condition={(!!newPost).toString()}\r\n                                       disabled={!newPost}> <SendOutlined color={'white'} rev={''}/>\r\n                        </AddPostButton>\r\n                        <PostAreaInput onChange={onChangeHandler}\r\n                                       placeholder={\"What's News?\"}\r\n                                       value={newPost}/>\r\n                    </PostAddWrapper>\r\n                </>\r\n                <MyPostsWrapper>\r\n                    <MyPosts fullName={fullName!} photo={photos?.small!}/>\r\n                </MyPostsWrapper>\r\n            </ProfileWrapper>\r\n        </StyleSheetManager>\r\n    );\r\n});\r\n\r\n\r\nconst ProfileWrapper = styled.div`\r\n  background-color: #121217;\r\n  display: flex;\r\n  margin: 3em auto;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`\r\n\r\nconst ProfileInnerWrapper = styled.div`\r\n  //background-color: #1a1a21;\r\n`\r\n\r\nconst ProfileTheme = styled.div`\r\n  background-image: url(${theme});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  width: 821px;\r\n  height: 150px;\r\n  //margin-left: -100px; //отрицательное смещение\r\n  //margin-right: -100px;\r\n  border-radius: 15px 15px 0 0;\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n`\r\n\r\nconst ProfileAvatar = styled.div<{ avatar: string | null }>`\r\n  position: relative;\r\n  left: 640px;\r\n  bottom: 160px;\r\n  background-image: url(${props => props.avatar ? props.avatar : avatar});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 100%;\r\n`\r\n\r\nconst ProfileNameStatusWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid #464646;\r\n  border-radius: 0 0 15px 15px;\r\n  padding: 10px;\r\n  background-color: rgba(27, 31, 38, 0.12);\r\n  height: 100px;\r\n`\r\n\r\nconst ProfileName = styled.div`\r\n  color: white;\r\n  font-size: 20px;\r\n`\r\n\r\nconst ProfileStatus = styled.div`\r\n  margin-top: 5px;\r\n  color: white;\r\n  font-size: 14px;\r\n  flex-flow: wrap;\r\n  max-width: 800px;\r\n`\r\n\r\n\r\nconst MyPostsWrapper = styled.div`\r\n  width: 820px;\r\n  max-width: 820px;\r\n  background-color: #1a1a21;\r\n  padding: 10px 0 10px 0;\r\n  border-radius: 15px;\r\n  border: 1px solid #464646;\r\n  \r\n`\r\n\r\n//=========================ADDPOST===================================\r\n\r\nconst PostAddWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: start;\r\n  width: 800px;\r\n  background-color: #1a1a21;\r\n  border: 1px solid #464646;\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n`\r\n\r\nexport const AddPostButton = styled.button<addBtnConditionProps>`\r\n  height: 30px;\r\n  background-color: ${props => props.condition === 'true' ? '#3D50FA' : 'rgba(61, 80, 250, 0.6)'};\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 7px;\r\n  width: 30px;\r\n  color: ${props => props.condition === 'true' ? 'white' : 'grey'};\r\n  cursor: ${props => props.condition === 'true' ? 'pointer' : 'default'};\r\n  z-index: 2;\r\n  -webkit-box-shadow: ${props => props.condition === 'true'? '0px 1px 19px 4px #3D50FA' : 'none'};\r\n  -moz-box-shadow: ${props => props.condition === 'true' ? '0px 1px 19px 4px #3D50FA' : 'none'};\r\n  box-shadow: ${props => props.condition === 'true' ? '0px 1px 19px 4px #3D50FA' : 'none'};\r\n  transition: background-color 0.2s ease, color 0.2s ease, box-shadow 0.2s ease;\r\n`\r\n\r\nconst PostAreaInput = styled.input`\r\n  all: unset;\r\n  text-align: center;\r\n  width: 700px;\r\n  height: 30px;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  background-color: #1a1a21;\r\n  font-size: 16px;\r\n  resize: none;\r\n  outline: none;\r\n  color: #ffffff;\r\n  overflow: auto;\r\n\r\n  &::placeholder {\r\n    color: rgba(127, 127, 145, 0.47);\r\n  }\r\n`\r\n\r\n//=========================/////===================================\r\n\r\n\r\nconst ModalBtnWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 25px;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n`"],"names":["selectFullName","state","profile","profileInfo","fullName","selectContacts","contacts","selectPhotos","photos","selectAboutMe","aboutMe","selectLookingForAJob","lookingForAJob","selectLookingForAJobDescription","lookingForAJobDescription","selectStatus","status","selectPosts","posts","selectNewPost","newPostText","MyPosts","memo","props","console","log","postList","useAppSelector","map","el","Post","title","data","name","avatar","photo","id","Posts","PostStyled","PostWrappper","AvatarAndTimeWrapper","PostAvatar","TimePost","TextWrapper","UserName","PostTitle","IconsWrapper","Icons","DeleteOutlined","rev","EditOutlined","LikeOutlined","styled","items","key","label","target","rel","href","danger","SetThemeBtn","DropDownStyled","menu","placement","arrow","color","Dropdown","EditableStatus","useState","mode","setMode","onDoubleClick","SetDataModalBtn","open","setOpen","onCancel","useDispatch","shouldForwardProp","prop","UploadModalWrapper","StyledButtonOpen","type","onClick","StyledModal","footer","StyledButtonUpload","onChange","e","Modal","Button","StyledInput","Input","SetUserInfoModalBtn","FacebookOutlined","IconWrapper","src","iconFB","VkOutlined","iconVK","MainlinkOutlined","WebsiteOutlined","ProfileInfo","useSelector","iconsList","icon","GithubOutlined","style","fontSize","backgroundPosition","link","github","YoutubeOutlined","youtube","TwitterOutlined","twitter","InstagramOutlined","instagram","facebook","vk","mainLink","website","to","IconContacts","ProfileInfoWrapper","AboutMeWrapper","ContactsWrapper","ContactsStyleDiv","Loader","Profile","newPost","dispatch","useAppDispatch","ProfileWrapper","ProfileInnerWrapper","ProfileTheme","ProfileNameStatusWrapper","ProfileName","ProfileStatus","ModalBtnWrapper","ProfileAvatar","large","PostAddWrapper","AddPostButton","addPostAC","setNewPostTextAC","condition","toString","disabled","SendOutlined","PostAreaInput","currentTarget","value","placeholder","MyPostsWrapper","small","theme"],"sourceRoot":""}