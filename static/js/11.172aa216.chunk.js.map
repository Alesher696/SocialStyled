{"version":3,"file":"static/js/11.172aa216.chunk.js","mappings":"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","sources":["common/utils/dialogs-selectors.ts","common/components/dialogs/dialogs_components/MessagesUsers.tsx","common/components/dialogs/dialogs_components/AddMessage.tsx","common/components/dialogs/dialogs_components/UsersDialogs.tsx","common/components/dialogs/Dialogs.tsx","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/DoubleLeftOutlined.js","../node_modules/@ant-design/icons/es/icons/DoubleLeftOutlined.js"],"sourcesContent":["import {RootState} from \"app/store\";\r\n\r\n\r\nexport const selectActiveUserId = (state: RootState) => state.dialogs.activeUserId\r\nexport const selectMessages = (state: RootState) => state.dialogs.messages\r\nexport const selectDialogs = (state: RootState) => state.dialogs.all_dialogs\r\n","import React from 'react';\r\nimport {messageType} from \"redux/dialogs-reducer\";\r\nimport styled, {StyleSheetManager} from \"styled-components\";\r\nimport {CheckOutlined} from \"@ant-design/icons\";\r\nimport {useAppSelector} from \"common/hooks/selectors\";\r\nimport {selectId} from \"common/utils/auth-selectors\";\r\nimport {selectActiveUserId, selectMessages} from \"common/utils/dialogs-selectors\";\r\nimport {Loader} from \"common/components/loader/Loader\";\r\nimport {AddMessage} from \"common/components/dialogs/dialogs_components/AddMessage\";\r\n\r\n\r\nexport const MessagesList = () => {\r\n\r\n    console.log('messageList is render')\r\n\r\n    const userIdIsActive = useAppSelector(selectActiveUserId)\r\n    const authId = useAppSelector(selectId)\r\n    const dialogsMessages = useAppSelector(selectMessages)\r\n\r\n    if (!dialogsMessages[userIdIsActive!]) {\r\n        return <Loader/>\r\n    } else\r\n        return (\r\n            <>\r\n            <StyleSheetManager shouldForwardProp={(prop) => prop !== 'senderId'}>\r\n                <MessageWrapper >\r\n                    {dialogsMessages[userIdIsActive!].map((message: messageType) => {\r\n\r\n                        const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n                        const addedAt = new Date(message.addedAt);\r\n                        const hours = addedAt.getHours();\r\n                        let minutes = addedAt.getMinutes();\r\n                        const newDate = new Date()\r\n\r\n                        if (minutes < 10) {\r\n                            minutes = Number(`0${minutes}`);\r\n                        }\r\n                        const formattedDate = `${hours.toString()}:${minutes.toString().padStart(2, '0')}`;\r\n\r\n                        return (\r\n\r\n                            <MessageInnerWrapper key={message.id}>\r\n                                <Message authid={authId} senderid={message.senderId}>\r\n                                    {message.body}\r\n                                </Message>\r\n                                <ViewWrapper>\r\n                                    <>\r\n                                        {newDate.toDateString() !== addedAt.toDateString()\r\n                                            ? daysOfWeek[addedAt.getDay()]\r\n                                            : formattedDate}\r\n                                        {message.viewed && <CheckOutlined rev={''}/>}\r\n                                    </>\r\n                                </ViewWrapper>\r\n                            </MessageInnerWrapper>\r\n                        )\r\n                    })}\r\n\r\n                </MessageWrapper>\r\n            </StyleSheetManager>\r\n            </>\r\n        )\r\n};\r\n\r\nconst Message = styled.span<{ authid: number | null, senderid: number }>`\r\n  background-color: ${props => props.authid === props.senderid ? '#38438c' : '#494957'};\r\n  border-radius: ${props => props.authid === props.senderid ? '7px 7px 2px 7px' : '7px 7px 7px 2px'};\r\n  width: max-content;\r\n  max-width: 450px;\r\n  height: max-content;\r\n  padding: 10px;\r\n  margin: 5px;\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst MessageInnerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: end;\r\n  margin-right: 5px;\r\n  border-bottom: 1px solid rgba(128, 128, 128, 0.11);\r\n`\r\n\r\nconst MessageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ViewWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  justify-items: end;\r\n  align-items: end;\r\n  height: 10px;\r\n  font-size: 10px;\r\n  margin-bottom: 10px;\r\n  gap: 10px;\r\n  color: grey;\r\n  margin-right: 5px;\r\n`","import React, {ChangeEvent, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport send from '../../../assets/send (1).png'\r\nimport {sendMessageTC} from \"redux/dialogs-reducer\";\r\nimport {StyleSheetManager} from 'styled-components';\r\nimport {useAppDispatch, useAppSelector} from \"common/hooks/selectors\";\r\nimport {selectActiveUserId} from \"common/utils/dialogs-selectors\";\r\n\r\n\r\ntype addBtnPropsType = {\r\n    condition: boolean\r\n}\r\n\r\nexport const AddMessage = () => {\r\n\r\n    console.log('AddMessage is render')\r\n\r\n    const [newMessage, setNewMessage] = useState('')\r\n    const userIdIsActive = useAppSelector(selectActiveUserId)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const addNewMessageOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n       setNewMessage(e.currentTarget.value)\r\n    }\r\n\r\n    const onClickAddMessage = () => {\r\n        // dispatch(addNewMessageAC(newMessage))\r\n        dispatch(sendMessageTC(userIdIsActive!, newMessage))\r\n        setNewMessage('')\r\n    }\r\n\r\n    const onEnterAddMessage = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            onClickAddMessage()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyleSheetManager shouldForwardProp={(prop) => prop !== 'condition'}>\r\n            <AddMessageWrapper>\r\n                <AddMessageInput placeholder={'Write a message...'}\r\n                                 onChange={addNewMessageOnChange}\r\n                                 value={newMessage}\r\n                                 onKeyDown={onEnterAddMessage}\r\n                />\r\n                <AddBtnInnerWrapper condition={!!newMessage}\r\n                                    onClick={onClickAddMessage}>\r\n                    <IconAddBtnWrapper src={send}/>\r\n                </AddBtnInnerWrapper>\r\n            </AddMessageWrapper>\r\n        </StyleSheetManager>\r\n\r\n    );\r\n};\r\n\r\nconst AddMessageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 40px;\r\n  background-color: #121218;\r\n  border-radius: 0 0 10px 10px;\r\n`\r\n\r\nconst AddMessageInput = styled.input`\r\n  all: unset;\r\n  background-color: #121218;\r\n  color: white;\r\n  height: 40px;\r\n  width: 80%;\r\n  margin-bottom: 1px;\r\n  margin-inline: 20px;\r\n  padding-left: 5px;\r\n  font-size: 15px;\r\n`\r\n\r\nconst AddBtnInnerWrapper = styled.div<addBtnPropsType>`\r\n  margin-right: 5px;\r\n  cursor: pointer;\r\n  //margin-right: 2px;\r\n  background-color: #3D50FA;\r\n  width: 30px;\r\n  height: 30px;\r\n  z-index: 3;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 8px;\r\n  -webkit-box-shadow: 0 1px 19px 4px #3D50FA;\r\n  -moz-box-shadow: 0 1px 19px 4px #3D50FA;\r\n  box-shadow: 0 1px 10px 4px #3D50FA;\r\n  //==============================================================\r\n  opacity: ${props => props.condition ? '1' : '0'};\r\n  visibility: ${props => props.condition ? 'visible' : 'hidden'};\r\n  transition: opacity 0.3s ease, visibility 0.2s ease;\r\n  //==============================================================\r\n`\r\n\r\nconst IconAddBtnWrapper = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  z-index: 2;\r\n`","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {getMessagesListTC, setActiveUserIdAC} from \"redux/dialogs-reducer\";\r\nimport styled from \"styled-components\";\r\nimport {useAppDispatch, useAppSelector} from \"common/hooks/selectors\";\r\nimport {selectDialogs} from \"common/utils/dialogs-selectors\";\r\nimport {Loader} from \"common/components/loader/Loader\";\r\n\r\n\r\nexport const UsersDialogs = () => {\r\n\r\n    console.log('usersDialogs is rendered ')\r\n\r\n    const userDialogs = useAppSelector(selectDialogs)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const userOnClickHandler = (userId: number) => {\r\n        dispatch(setActiveUserIdAC(userId))\r\n        dispatch(getMessagesListTC(userId))\r\n    }\r\n\r\n    const userList = userDialogs?.map((el) =>\r\n        <User key={el.id} to={`/SocialStyled/dialogs/${el.id}/messages`} onClick={() => userOnClickHandler(el.id)}>\r\n            <div>\r\n                {el.userName}\r\n            </div>\r\n            <div>\r\n                {el.photos.small ?\r\n                    <UserAvatar src={el.photos.small}/> :\r\n                    <DefaultAvatar>\r\n                        {el.userName.trim()[0].toUpperCase()}\r\n                    </DefaultAvatar>}\r\n                {el.hasNewMessages && <NewMessageIs>{el.newMessagesCount}</NewMessageIs>}\r\n                {/*<NewMessageIs>{el.newMessagesCount}</NewMessageIs>*/}\r\n            </div>\r\n        </User>\r\n    )\r\n    if(!userDialogs){\r\n        return <Loader/>\r\n    }\r\n    return (\r\n        <UserListWrapper>\r\n            {userList}\r\n        </UserListWrapper>\r\n    );\r\n};\r\n\r\nconst NewMessageIs = styled.div`\r\n  position: relative;\r\n  bottom: 65px;\r\n  left: 40px;\r\n  background-color: rgba(210, 30, 30, 0.83);\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  justify-items: center;\r\n`\r\n\r\nconst UserAvatar = styled.img`\r\n  border-radius: 50px;\r\n  width: 50px;\r\n  height: 50px;\r\n`\r\n\r\nconst DefaultAvatar = styled.div`\r\n  border-radius: 50px;\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: ${() => `rgb(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`};\r\n  align-items: center;\r\n  justify-content: center;\r\n  display: flex;\r\n  font-size: 24px;\r\n`\r\n\r\nconst User = styled(NavLink)`\r\n  cursor: pointer;\r\n  width: max-content;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n  padding: 5px;\r\n  padding-inline: 10px;\r\n  //background-color: #39404b;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n  text-decoration: none;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n\r\n  &:hover {\r\n    background-color: #3e4452;\r\n  }\r\n`\r\n\r\nconst UserListWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  margin-right: 10px;\r\n`","import React, {useEffect, useRef} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {getDialogsTC, setActiveUserIdAC} from \"redux/dialogs-reducer\";\r\nimport {MessagesList} from \"./dialogs_components/MessagesUsers\";\r\nimport {useAppDispatch, useAppSelector} from \"common/hooks/selectors\";\r\nimport {AddMessage} from \"common/components/dialogs/dialogs_components/AddMessage\";\r\nimport {selectActiveUserId, selectMessages} from \"common/utils/dialogs-selectors\";\r\nimport {UsersDialogs} from \"common/components/dialogs/dialogs_components/UsersDialogs\";\r\nimport {DoubleLeftOutlined} from \"@ant-design/icons\";\r\n\r\n\r\n\r\n\r\nexport const Dialogs = () => {\r\n\r\n    console.log('dialogs is rendered ')\r\n\r\n    const userIdIsActive = useAppSelector(selectActiveUserId);\r\n    const dialogsMessages = useAppSelector(selectMessages);\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getDialogsTC())\r\n    }, [])\r\n\r\n    const messagesWrapperRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (messagesWrapperRef.current) {\r\n            if (userIdIsActive && dialogsMessages[userIdIsActive]) {\r\n                messagesWrapperRef.current.scrollTop = messagesWrapperRef.current.scrollHeight;\r\n            }\r\n        }\r\n    }, [userIdIsActive, dialogsMessages]);\r\n\r\n    return (\r\n        <DialogsWrapper>\r\n            { !userIdIsActive ? '': <StyledBackButton onClick={()=> dispatch(setActiveUserIdAC(0))}>\r\n                    <DoubleLeftOutlined rev={''} />\r\n                </StyledBackButton>}\r\n            <AddMessageWrapper>\r\n                <MessagesWrapper ref={messagesWrapperRef}>\r\n                    {!userIdIsActive ?<UsersDialogs/> : ''}\r\n                    {userIdIsActive? <MessagesList/> : ''}\r\n                </MessagesWrapper>\r\n                {userIdIsActive ? <AddMessage/>: ''}\r\n            </AddMessageWrapper>\r\n        </DialogsWrapper>\r\n    );\r\n};\r\n\r\nconst StyledBackButton = styled.button`\r\n  background-color: #2e2f3a;\r\n  border-radius: 10px 10px 10px 10px;\r\n  outline: none;\r\n  border: none;\r\n  color: white;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    background-color: #494957;\r\n  }\r\n`\r\n\r\nconst DialogsWrapper = styled.div`\r\n  color: white;\r\n  font-size: 24px;\r\n  margin: 3em auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n`\r\n\r\nconst AddMessageWrapper = styled.div`\r\n  border: 1px solid #464646;\r\n  border-radius: 10px 6px 6px 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 740px;\r\n`\r\n\r\nconst MessagesWrapper = styled.div`\r\n  border-radius: 10px 6px 6px 10px;\r\n  background-color: #1a1a21;\r\n  width: 600px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 740px;\r\n  max-height: 740px;\r\n  //position: relative;\r\n  overflow: auto;\r\n  overflow-x: hidden;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #494957;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background-color: #2e2f3a;\r\n    border-radius: 5px;\r\n  }\r\n`","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CheckOutlined.displayName = 'CheckOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","// This icon file is generated automatically.\nvar DoubleLeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M272.9 512l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L186.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H532c6.7 0 10.4-7.7 6.3-12.9L272.9 512zm304 0l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L490.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H836c6.7 0 10.4-7.7 6.3-12.9L576.9 512z\" } }] }, \"name\": \"double-left\", \"theme\": \"outlined\" };\nexport default DoubleLeftOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DoubleLeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/DoubleLeftOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DoubleLeftOutlined = function DoubleLeftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DoubleLeftOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DoubleLeftOutlined.displayName = 'DoubleLeftOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DoubleLeftOutlined);"],"names":["selectActiveUserId","state","dialogs","activeUserId","selectMessages","messages","selectDialogs","all_dialogs","MessagesList","console","log","userIdIsActive","useAppSelector","authId","selectId","dialogsMessages","shouldForwardProp","prop","MessageWrapper","map","message","addedAt","Date","hours","getHours","minutes","getMinutes","newDate","Number","formattedDate","toString","padStart","MessageInnerWrapper","Message","authid","senderid","senderId","body","ViewWrapper","toDateString","getDay","viewed","CheckOutlined","rev","id","Loader","styled","props","AddMessage","useState","newMessage","setNewMessage","dispatch","useAppDispatch","onClickAddMessage","sendMessageTC","AddMessageWrapper","AddMessageInput","placeholder","onChange","e","currentTarget","value","onKeyDown","key","AddBtnInnerWrapper","condition","onClick","IconAddBtnWrapper","src","send","UsersDialogs","userDialogs","userList","el","User","to","userId","setActiveUserIdAC","getMessagesListTC","userName","photos","small","UserAvatar","DefaultAvatar","trim","toUpperCase","hasNewMessages","NewMessageIs","newMessagesCount","UserListWrapper","Math","floor","random","NavLink","Dialogs","useEffect","getDialogsTC","messagesWrapperRef","useRef","current","scrollTop","scrollHeight","DialogsWrapper","StyledBackButton","DoubleLeftOutlined","MessagesWrapper","ref","React","AntdIcon","_extends","icon","CheckOutlinedSvg","DoubleLeftOutlinedSvg"],"sourceRoot":""}